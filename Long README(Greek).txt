Α.Μ: 1115201400194
ΟΝΟΜ/ΜΟ: ΣΤΥΛΙΑΝΟΠΟΥΛΟΣ ΚΥΡΙΑΚΟΣ

Α.Μ: 1115201400173
ΟΝΟΜ/ΜΟ: ΡΟΥΒΑΛΗΣ ΓΙΩΡΓΟΣ

ΕΝΤΟΛΗ ΜΕΤΑΓΛΩΤΙΣΣΗΣ:
	g++ -o virtualHighway ./client.cpp ./highway.cpp ./segment.cpp ./entrance.cpp ./toll.cpp ./car.cpp

ΕΝΤΟΛΗ ΕΚΤΕΛΕΣΗΣ:
	./virtualHighway <N> <Nsegs> <K>

	όπου:
		<N>		: (int) αριθμός κύκλων προσομοίωσης
		<Nsegs>	: (int) αριθμός τμημάτων αττικής οδού
		<K>		: (int) μέγιστος αριθμός οχημάτων που μπορούν να εισέλθουν σε ένα κόμβο από ένα διόδιο με εισπράκτορα 
	Σημείωση: Για την ομαλή λειτουργία του προγράμματος το <Ν> να είναι τουλάχιστον διπλάσιο από το <Νsegs>


ΠΛΗΡΟΦΟΡIΕΣ ΣΧΕΤΙΚA ΜΕ ΤΗ ΜΕΘΟΔΟΛΟΓIΑ ΠΟΥ ΑΚΟΛΟΥΘHΣΑΜΕ, OΠΩΣ ΑΝΑΠΑΡΑΣΤAΣΕΙΣ ΔΕΔΟΜEΝΩΝ, ΠΑΡΑΔΟΧEΣ ΠΟΥ ΚANΑMΕ:

-Αρχικά, δεν χρησιμοποιήσαμε το όρισμα <Percent> . Αντί αυτού , το κάθε αμάξι περνάει σε κατάσταση ετοιμότητας αυτόματα μόλις διανύσει όλο το μήκος του τμήματος στο οποίο βρίσκεται.(Περαιτέρω ανάλυση στην επεξήγηση της μεθοδολογίας.)

-Σχηματική αναπαράσταση των δεδομένων:

+----------------------------------------------------------------------------------------------+
|                                                                                              |
|   .-----------------------------.          .----------------------------.                    |
|   |           Highway           |          |          Segment           |                    |
|   |-----------------------------|          |----------------------------|                    |
|   |      .---------------.      |          |       .------------.       |                    |
|   |      | Segment array |      |    +-------------| Entrance   |       |                    |
|   |      |---------------|      |    |     |       '------------'       |                    |
|   |      |---------------|      |    |     |       .------------.       |                    |
|   |      |---------------|---------------->|       | Car* array |       |                    |
|   |      |---------------|      |    |     |       |------------|-----------+                |
|   |      |---------------|      |    |     |       |------------|       |   |                |
|   |      '---------------'      |    |     |       |------------|       |   |                |
|   |                             |    |     |       '------------'       |   |                |
|   '-----------------------------'    |     '----------------------------'   |                |
|                                      |                                      |                |
|                  +-------------------+                                      |                |
|                  |                                                          |                |
|                  V                                                          |                |
|   .------------------------------.                                          |                |
|   |           Entrance           |                                          |                |
|   |------------------------------|        .----------------------------.    |                |
|   |       .--------------.       |        |            Car             |    |                |
|   |       | E_Toll array |       |        |----------------------------|    |                |
|   |       |--------------|       |        |                            |    |                |
|   |       |--------------|--+    |        |                            |<---+                |
|   |       '--------------'  |    |        |                            |                     |
|   |                         |    |        |                            |                     |
|   |       .--------------.  |    |        '----------------------------'                     |
|   |       | C_Toll array |  |    |                     ^                                     |
|   |       |--------------|  |    |                     |                                     |
|   |    +--|--------------|  |    |                     +--------------------+                |
|   |    |  '--------------'  |    |                                          |                |
|   '----|--------------------|----'                                          |                |
|        |                    |                                               |                |
|        |                    |            .------------------------------.   |                |
|        |                    |         o o|       Toll (abstract)        |   |                |
|        V                    V         o  |------------------------------|   |                |
|   .-------------.   .-------------.   o  |       .------------.         |   |                |
|   |   C_Toll    |   |   E_Toll    |   o  |       | Car* array |         |   |                |
|   |-------------|   |-------------|   o  |       |------------|         |   |                |
|   |             |   |             |   o  |       |------------|-------------+                |
|   '-------------'   '-------------'   o  |       |------------|         |                    |
|          ^                 ^          o  |       |------------|         |                    |
|          o                 o          o  |       '------------'         |                    |
|          o o (INHERITED) o o  o o o o o  '------------------------------'                    |
|                                                                                              |
|                                                                                              |
+----------------------------------------------------------------------------------------------+

ΠΕΡΙΓΡΑΦH ΜΕΣΩ ΒΗΜAΤΩΝ ΤΗΣ ΜΕΘΟΔΟΛΟΓIΑΣ ΠΟΥ ΑΚΟΛΟΥΘHΣΑMΕ:

Δημιουργία & Αρχικοποίηση:

 -Κατά τη δημιουργία του προγράμματος , δημιουργείται ένα αντικείμενο τύπου highway , και αλυσιδωτά δημιουργούνται εσωτερικά ένας αριθμός <Nsegs> τμημάτων του αυτοκινητόδρομου(Segments) και δίνεται ως παράμετρος το μήκος του κάθε τμήματος , length(τυχαίος αριθμός από 1 ως <N>/<Nsegs>).Τέλος, εκτυπώνεται το μήνυμα "Αυτοκινητόδρομος σε λειτουργία!!".

 -Κατά τη δημιουργία ενός Segment , ορίζεται η χωρητικότητα αυτοκινήτων του(τυχαίος αριθμός από 10-20) , ορίζεται το μήκος του(length) , δημιουργείται μια είσοδος(entrance) , και μια ποσότητα οχημάτων(car) με τυχαίο προορισμό εξόδου κάποιον επόμενο κόμβο.

 -Κατά τη δημιουργία μιας Entrance , δημιουργούνται NumofTolls ηλεκτρονικά διόδια(E_Tolls) , και NumofTolls διόδια με εισπράκτορα(C_Tolls).To NumofTolls έχει την τιμή 1(ως πειραματική αποδοτική επιλογή).

 -Κατά τη δημιουργία ενός E_Toll ή C_Toll , δημιουργείται ένας τυχαίος αριθμός αυτοκινήτων(car)(το καθένα με τυχαίο προορισμό εξόδου κάποιον επόμενο κόμβο), από 1 ως capacity-1, που περιμένουν στη ουρά του ώστε να εισέλθουν στο αντίστοιχο τμήμα του αυτοκινητόδρομου. Το capacity εχει την τιμή 10 (πάλι ως αποδοτική τιμή μετά από πειραματισμούς).

 -Κατά τη δημιουργία(πάλι...) ενός Car , ορίζεται ο αριθμός του τμήματος στο οποίο κινείται , προσδιορίζεται ο κόμβος εξόδου του , θέτεται η θέση του πάνω στο Segment(SegPlace) ως 0.

 -Σημείωση πάνω στη δημιουργία των Cars στα διόδια: ο αριθμός του τμήματος στο οποίο ανήκει γίνεται ίσος με -1(από εκφώνηση).

Λειτουργία(Simulation Cycles & Operate):

 -To πρόγραμμα εκτελεί <Ν> κύκλους λειτουργίας , καλώντας σε κάθε κύκλο την Operate του αυτοκινητόδρομου(highway).

 -Operate της highway: Υπολογίζεται και εκτυπώνεται ο συνολικός αριθμός των αυτοκινήτων που κινούνται στον αυτοκινητόδρομο. Για κάθε Segment(από το τέλος προς την αρχή) καλείται η operate() του Segment.

 -Operate του Segment: 
	1.Για κάθε αμάξι που κινείται στο τμήμα , αν δε βρίσκεται σε ετοιμότητα , το προχωράει με τυχαία ταχύτητα(1 με 3 μονάδες μήκους) καλώντας τη συνάρτηση move() του Car.
	2.Περνάει στο επόμενο τμήμα τα αμάξια που βρίσκονται σε ετοιμότητα(αν υπάρχει επαρκής χώρος) και δεν επιθυμούν να εξέλθουν στον παρόν κόμβο.Αν δε περάσουν όλα τα έτοιμα αμάξια στον επόμενο κόμβο τότε εκτυπώνεται το μήνυμα "Kathysterhseis meta ton komvo <αριθμός κόμβου>".
	3.Εξάγει τα αμάξια σε ετοιμότητα που έχουν ως προορισμό εξόδου το παρόν κόμβο , διαγράφοντάς τα.
	4.Εισάγει αμάξια από τα διόδια της εισόδου του , καλώντας την Operate() της Entrance . Αν δεν εισήλθαν όλα τα αμάξια από τα διόδια , τότε εκτυπώνεται το μήνυμα "Kathysterhseis sthn eisodo tou komvou <αριθμός κόμβου>".
	5.Αν δεν έκτυπώθηκαν τα αντίστοιχα μηνύματα από τα .3 & .4(δηλαδή δε συνέβησαν καθυστερήσεις) , εκτυπώνεται το μήνυμα "Threite tis apostaseis asfaleias sto tmhma meta ton komvo <αριθμός κόμβου>".
	Σημείωση: στον τελευταίο κόμβο η operate() δεν πραγματοποιεί είσοδο, ενώ στον πρώτο δεν γίνεται έξοδος οχημάτων.

 -Operate της Entrance: Περνάει τον ανάλογο αριθμό αμαξιών από τα διόδιά της συναρτήσει του <Κ> και της εναπομείνασας χωρητικότητας του αντίστοιχου Segment , και αυξομειώνει την τιμή του <Κ> με τέτοιο τρόπο που περιγράφεται στην εκφώνηση της εργασίας.Ενημερώνει το αντίστοιχο Segment αν όλα τα αμάξια που περίμεναν πέρασαν από τα διόδια και εισάγει στην ουρά του κάθε διοδίου από 0-2 νέα αμάξια.

 -Σημείωση για την κατάσταση ετοιμότητας του κάθε Car μέσα στο Segment: Το κάθε αμάξι περιέχει ως μέλος την θέση του στο Segment (η οποία κυμαίνεται από 0 εως Segment::length). Κατά την κλήση της συνάρτησης move(int speed) στην Operate() του Segment αυξάνεται αυτή η θέση κατά speed μονάδες. Όταν η θέση αυτή έχει τιμή ίση με το μήκος του τμήματος (Segment::length) τότε το αμάξι περνάει σε κατάσταση ετοιμότητας.Κατ'αυτόν τον τρόπο , δεν κάνουμε χρήση του ορίσματος <Percent> και δεν καθιστούμε έτοιμα τυχαίως τα αμάξια με βάση αυτό,αλλά το προσαρμόζουμε σε ρεαλιστικά δεδομένα.
